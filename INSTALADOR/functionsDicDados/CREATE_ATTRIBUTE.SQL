CREATE OR REPLACE FUNCTION comp.create_attribute(id_attribute numeric, id_application numeric, nm_schema character varying)
  RETURNS void AS
$BODY$
DECLARE

TEXT_W 			VARCHAR(4000) := '';
TABLE_NAME_W		comp.system_table.name%type;
ATTRIBUTE_NAME_W	comp.table_attribute.name%type;
ATTRIBUTE_TYPE_W	comp.expression.ds_por%type;
ATTRIBUTE_SIZE_W	comp.table_attribute.vl_attribute_size%type;
DECIMAL_SIZE_W		comp.table_attribute.vl_decimal_size%type;
REQUIRED_W		BOOLEAN;
V_EXISTS		BOOLEAN;
DEFAULT_VALUE_W		comp.table_attribute.vl_default%type;
VCOUNT			INTEGER;

BEGIN

SELECT 	A.NAME TABLE_NAME, 
		B.NAME ATTRIBUTE_NAME,
		COMP.GET_EXPRESSION_TEXT(C.ID_EXPRESSION, $2) ATTRIBUTE_TYPE,
		B.VL_ATTRIBUTE_SIZE,
		B.VL_DECIMAL_SIZE,
		B.FL_NOT_NULL,
		COALESCE(B.VL_DEFAULT,'') VL_DEFAULT
INTO	TABLE_NAME_W, 	
		ATTRIBUTE_NAME_W,
		ATTRIBUTE_TYPE_W,
		ATTRIBUTE_SIZE_W,
		DECIMAL_SIZE_W,
		REQUIRED_W,
		DEFAULT_VALUE_W
FROM 	COMP.SYSTEM_TABLE A,
	COMP.TABLE_ATTRIBUTE B,
	COMP.DOMAIN_VALUE C
WHERE 	A.ID = B.ID_TABLE
AND	B.ID_DOMAIN_VALUE_TYPE = C.ID
AND	B.ID = $1
AND A.ID_APPLICATION = $2;

TEXT_W := 'ALTER TABLE ' || $3 || '.' || TABLE_NAME_W || ' ADD ' || ATTRIBUTE_NAME_W || ' ' || ATTRIBUTE_TYPE_W;

IF (ATTRIBUTE_SIZE_W > 0) THEN
	TEXT_W := TEXT_W || '(' || ATTRIBUTE_SIZE_W;

	IF (DECIMAL_SIZE_W > 0) THEN
		TEXT_W := TEXT_W || ',' || DECIMAL_SIZE_W;
	END IF;

	TEXT_W := TEXT_W || ')';		
END IF;

IF (DEFAULT_VALUE_W <> '') THEN
	IF ((COMP.IS_NUMBER(DEFAULT_VALUE_W)) OR (DEFAULT_VALUE_W = 'CURRENT_DATE') OR (DEFAULT_VALUE_W = 'CURRENT_TIMESTAMP')) THEN
		TEXT_W := TEXT_W || ' DEFAULT ' || DEFAULT_VALUE_W;
	ELSE
		TEXT_W := TEXT_W || ' DEFAULT ''' || DEFAULT_VALUE_W || '''';
	END IF;
END IF;

IF (REQUIRED_W IS TRUE) THEN
	TEXT_W := TEXT_W || ' NOT NULL';
END IF;


SELECT 	CASE WHEN COUNT(1) > 0 THEN TRUE ELSE FALSE END AS VMARK
INTO	V_EXISTS
FROM 	INFORMATION_SCHEMA.TABLES
WHERE	UPPER(TABLE_SCHEMA) = UPPER($3)
AND	UPPER(TABLE_NAME) = UPPER(TABLE_NAME_W);

IF (V_EXISTS) THEN
	EXECUTE 'SELECT COALESCE(COUNT(1),0) FROM ' || $3 || '.' || TABLE_NAME_W INTO VCOUNT;
ELSE
	VCOUNT := 0;
END IF;

IF ((DEFAULT_VALUE_W = '') AND (REQUIRED_W IS TRUE) AND (VCOUNT > 0)) THEN
	PERFORM COMP.WRITE_STRUCTURE_ERROR_LOG(68,TABLE_NAME_W,ATTRIBUTE_NAME_W,'');
ELSE
	PERFORM COMP.EXECUTE_STATEMENT(TEXT_W);
END IF;

END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
