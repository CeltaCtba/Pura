CREATE OR REPLACE FUNCTION comp.return_log_sync(vkind integer DEFAULT 1)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
VRESULT TEXT := '';
ERR_COUNT INTEGER := 0;
VDUR INTERVAL;
REC RECORD;
BEGIN
	EXECUTE 'SELECT COALESCE(COUNT(1),0) FROM COMP.LOG_SYNCHRONIZER WHERE LEVEL = 0' INTO ERR_COUNT;
	
	IF (($1 = 1) OR ($1 = 2)) THEN
		IF (ERR_COUNT > 0) THEN
			VRESULT := COMP.GET_EXPRESSION_TEXT(71);
		ELSE
			VRESULT := COMP.GET_EXPRESSION_TEXT(55);
		END IF;
		
		VRESULT := VRESULT || chr(13) || chr(10) || COMP.GET_EXPRESSION_TEXT(56);
		
		SELECT 	DURATION
		INTO	VDUR
		FROM 	COMP.LOG_SYNCHRONIZER
		WHERE	LEVEL = 1;
		
		IF (TO_CHAR(VDUR, 'HH24') <> '00') THEN
				VRESULT := VRESULT || TO_CHAR(VDUR, 'HH24') || ' '|| COMP.GET_EXPRESSION_TEXT(57);
		END IF;
		IF (TO_CHAR(VDUR, 'MM')  <> '00') THEN
				VRESULT := VRESULT || TO_CHAR(VDUR, 'MM') || ' '|| COMP.GET_EXPRESSION_TEXT(58);
		END IF;
		IF (TO_CHAR(VDUR, 'SS')  <> '00') THEN
				VRESULT := VRESULT || TO_CHAR(VDUR, 'SS,MS') || ' '|| COMP.GET_EXPRESSION_TEXT(59);
		END IF;
	END IF;
	
	IF ($1 = 2) THEN
		VRESULT := VRESULT || chr(13) || chr(10);
		FOR REC IN
			SELECT 	INITCAP(SC.NAME) SCHEMA_NAME,
					COMP.GET_EXPRESSION_TEXT(LS.ID_EXPRESSION_MESSAGE) TXT,
					LS.DURATION,
					COALESCE((SELECT COUNT(X.ID) 
					FROM COMP.LOG_SYNCHRONIZER X
					WHERE (X.ID_SUP = LS.ID_SUP AND X.LEVEL = 3)
					AND	  X.ID_DATABASE_SCHEMA = LS.ID_DATABASE_SCHEMA),0)	AS QT
			FROM	COMP.DATABASE_SCHEMA SC,
					COMP.LOG_SYNCHRONIZER LS
			WHERE	LS.ID_DATABASE_SCHEMA = SC.ID
			AND		LS.LEVEL = 2
			ORDER BY 1,2 DESC
		LOOP
			IF (REC.QT > 0) THEN 
				VRESULT := VRESULT || chr(13) || chr(10);
				VRESULT := VRESULT || COMP.GET_EXPRESSION_TEXT(66) || ' ' || REC.SCHEMA_NAME;
				VRESULT := VRESULT || ': ' || REC.TXT || ' ';
				VRESULT := VRESULT || REC.QT || ' ' || COMP.GET_EXPRESSION_TEXT(67) || ' ';
				
				IF (TO_CHAR(REC.DURATION, 'HH24') <> '00') THEN
					VRESULT := VRESULT || TO_CHAR(REC.DURATION, 'HH24') || ' '|| COMP.GET_EXPRESSION_TEXT(57);
				END IF;
				IF (TO_CHAR(REC.DURATION, 'MM')  <> '00') THEN
					VRESULT := VRESULT || TO_CHAR(REC.DURATION, 'MM') || ' '|| COMP.GET_EXPRESSION_TEXT(58);
				END IF;
				IF (TO_CHAR(REC.DURATION, 'SS,MS')  <> '00,000') THEN
					VRESULT := VRESULT || TO_CHAR(REC.DURATION, 'SS,MS') || ' '|| COMP.GET_EXPRESSION_TEXT(59);
				ELSE
					VRESULT := VRESULT || '0,05 '|| COMP.GET_EXPRESSION_TEXT(59);
				END IF;

				
			END IF;
		END LOOP;
	END IF;

	RETURN VRESULT;

END;
$function$
