CREATE OR REPLACE FUNCTION comp.execute_script_version(application_id numeric, attribute_id numeric)
  RETURNS void AS
$BODY$
DECLARE
REC		RECORD;
VSCHEMA_DATA_EXISTS BOOLEAN = FALSE;
BEGIN
	IF (COALESCE($2,0) <> 0) THEN
		FOR REC IN
			SELECT	COALESCE(DS_SCRIPT,'') AS TEXT_W,
					ID AS SCRIPT_ID
			FROM	COMP.VERSION_SCRIPT
			WHERE	ID_APPLICATION = $1
			AND		ID_TABLE_ATTRIBUTE = $2
			AND		FL_EXECUTED = FALSE
			AND		ID_VERSION = (
				SELECT 	MAX(V.ID)
				FROM	COMP.VERSION V
				WHERE	V.ID_APPLICATION = $1)
		LOOP
			IF (REC.TEXT_W <> '') THEN
				PERFORM COMP.EXECUTE_STATEMENT(REC.TEXT_W);		
				PERFORM COMP.EXECUTE_STATEMENT('UPDATE COMP.VERSION_SCRIPT SET FL_EXECUTED = TRUE WHERE ID = ' || REC.SCRIPT_ID);		
			END IF;				
		END LOOP;
	ELSE
		SELECT 	CASE WHEN COUNT(1) > 0 THEN TRUE ELSE FALSE END AS VMARK
		INTO	VSCHEMA_DATA_EXISTS
		FROM 	INFORMATION_SCHEMA.TABLES
		WHERE	UPPER(TABLE_SCHEMA) = 'DATA'
		AND		UPPER(TABLE_NAME) = 'PARAMETRO';
		
		IF (VSCHEMA_DATA_EXISTS) THEN
			FOR REC IN
				SELECT	COALESCE(DS_SCRIPT,'') AS TEXT_W,
						ID AS SCRIPT_ID
				FROM	COMP.VERSION_SCRIPT
				WHERE	ID_APPLICATION = $1
				AND		FL_EXECUTED = FALSE
				AND		((VL_CNPJ IS NULL) 
				OR 		(VL_CNPJ = (SELECT CNPJEMPRESA FROM DATA.PARAMETRO LIMIT 1)))
				AND		ID_VERSION > (
					SELECT 	MAX(V.ID)
					FROM	COMP.VERSION V
					WHERE	V.ID_APPLICATION = $1)
			LOOP
				IF (REC.TEXT_W <> '') THEN
					PERFORM COMP.EXECUTE_STATEMENT(REC.TEXT_W);		
					PERFORM COMP.EXECUTE_STATEMENT('UPDATE COMP.VERSION_SCRIPT SET FL_EXECUTED = TRUE WHERE ID = ' || REC.SCRIPT_ID);		
				END IF;				
			END LOOP;
		END IF;
	END IF;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
