CREATE OR REPLACE FUNCTION comp.create_index_on_attribute()
  RETURNS void AS
$BODY$

DECLARE
REC 		RECORD;
TEXT_W 		VARCHAR(4000) := '';
ID_MAX_INDEX		INTEGER;
ID_MAX_INDEX_ATT	INTEGER;

BEGIN

FOR REC IN 
	SELECT	FOO.ID as ID_ATTRIBUTE,
			SUBSTR(FOO.TAB_NAME || '_' || FOO.NAME || '_IDX',1,50)  AS NAME_INDICE,
			FOO.TAB_NAME AS NOME_TABELA,
			FOO.NAME AS NOME_ATRIBUTO,
			FOO.ID_TABLE AS TABLE_ID
	FROM 	(SELECT	B.ID, 
					B.NAME, 
					D.NAME TAB_NAME,
					B.ID_TABLE
			 FROM	COMP.INTEGRITY_ATTRIBUTE I,
					COMP.TABLE_ATTRIBUTE B,
					COMP.INTEGRITY C,
					COMP.SYSTEM_TABLE D
			WHERE	C.ID		= I.ID_INTEGRITY
			AND		B.ID_TABLE	= D.ID
			AND		D.ID_DATABASE_SCHEMA		= 2
			AND		I.ID_TABLE_ATTRIBUTE_ORIGIN = B.ID
			AND		I.ID_TABLE_ATTRIBUTE_REFERENCE IS NULL
	UNION
	SELECT	B.ID, 
			B.NAME, 
			D.NAME TAB_NAME,
			B.ID_TABLE
	FROM	COMP.INTEGRITY_ATTRIBUTE I,
			COMP.TABLE_ATTRIBUTE B,
			COMP.INTEGRITY C,
			COMP.SYSTEM_TABLE D
	WHERE	C.ID    	= I.ID_INTEGRITY
	AND		B.ID_TABLE 	= D.ID
	AND 	D.ID_DATABASE_SCHEMA = 2
	AND 	I.ID_TABLE_ATTRIBUTE_REFERENCE = B.ID
	AND 	I.ID_TABLE_ATTRIBUTE_ORIGIN IS NULL) AS FOO
	WHERE	FOO.ID NOT IN (	SELECT	DISTINCT ID_TABLE_ATTRIBUTE 
							FROM	COMP.TABLE_INDEX_ATTRIBUTE)
LOOP

	SELECT	MAX(A.ID) + 1
	INTO	ID_MAX_INDEX
	FROM	COMP.TABLE_INDEX A;
	
	SELECT	MAX(A.ID) + 1
	INTO	ID_MAX_INDEX_ATT
	FROM	COMP.TABLE_INDEX_ATTRIBUTE A;

	INSERT INTO COMP.TABLE_INDEX(NAME, FL_ACTIVE ,ID, ID_TABLE, ID_EXPRESSION_DOCUMENTATION) VALUES(REC.NAME_INDICE, TRUE, ID_MAX_INDEX, REC.TABLE_ID, 2);
	
	INSERT INTO COMP.TABLE_INDEX_ATTRIBUTE(ID, ID_INDEX, ID_TABLE_ATTRIBUTE, FL_ACTIVE) VALUES(ID_MAX_INDEX_ATT, ID_MAX_INDEX, REC.ID_ATTRIBUTE, TRUE);

END LOOP;

END;

$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
